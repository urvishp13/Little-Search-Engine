crazy crazy crazy crazy crazy

Inserts the last occurrence in the parameter list in the correct position in the
same list, based on ordering occurrences on descending frequencies. The elements
0..n-2 in the list are already in the correct order. Insertion of the last element
(the one at index n-1) is done by first finding the correct spot using binary search, 
then inserting at that spot.

Inserts the last occurrence in the parameter list in the correct position in the
same list, based on ordering occurrences on descending frequencies. The elements
0..n-2 in the list are already in the correct order. Insertion of the last element
(the one at index n-1) is done by first finding the correct spot using binary search, 
then inserting at that spot.

Inserts the last occurrence in the parameter list in the correct position in the
same list, based on ordering occurrences on descending frequencies. The elements
0..n-2 in the list are already in the correct order. Insertion of the last element
(the one at index n-1) is done by first finding the correct spot using binary search, 
then inserting at that spot.

Given a word, returns it as a keyword if it passes the keyword test,
otherwise returns null. A keyword is any word that, after being stripped of any
TRAILING punctuation, consists only of alphabetic letters, and is not
a noise word. All words are treated in a case-INsensitive manner.

Given a word, returns it as a keyword if it passes the keyword test,
otherwise returns null. A keyword is any word that, after being stripped of any
TRAILING punctuation, consists only of alphabetic letters, and is not
a noise word. All words are treated in a case-INsensitive manner.

Search result for "kw1 or kw2". A document is in the result set if kw1 or kw2 occurs in that
document. Result set is arranged in descending order of occurrence frequencies. (Note that a
matching document will only appear once in the result.) Ties in frequency values are broken
in favor of the first keyword. (That is, if kw1 is in doc1 with frequency f1, and kw2 is in doc2
also with the same frequency f1, then doc1 will appear before doc2 in the result. 
The result set is limited to 5 entries. If there are no matching documents, the result is null.

Search result for "kw1 or kw2". A document is in the result set if kw1 or kw2 occurs in that
document. Result set is arranged in descending order of occurrence frequencies. (Note that a
matching document will only appear once in the result.) Ties in frequency values are broken
in favor of the first keyword. (That is, if kw1 is in doc1 with frequency f1, and kw2 is in doc2
also with the same frequency f1, then doc1 will appear before doc2 in the result. 
The result set is limited to 5 entries. If there are no matching documents, the result is null.

Merges the keywords for a single document into the master keywordsIndex
hash table. For each keyword, its Occurrence in the current document
must be inserted in the correct place (according to descending order of
frequency) in the same keyword's Occurrence list in the master hash table. 
This is done by calling the insertLastOccurrence method.