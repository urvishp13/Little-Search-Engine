crazy crazy crazy crazy

Given a word, returns it as a keyword if it passes the keyword test,
otherwise returns null. A keyword is any word that, after being stripped of any
TRAILING punctuation, consists only of alphabetic letters, and is not
a noise word. All words are treated in a case-INsensitive manner.

Given a word, returns it as a keyword if it passes the keyword test,
otherwise returns null. A keyword is any word that, after being stripped of any
TRAILING punctuation, consists only of alphabetic letters, and is not
a noise word. All words are treated in a case-INsensitive manner.

Given a word, returns it as a keyword if it passes the keyword test,
otherwise returns null. A keyword is any word that, after being stripped of any
TRAILING punctuation, consists only of alphabetic letters, and is not
a noise word. All words are treated in a case-INsensitive manner.

Given a word, returns it as a keyword if it passes the keyword test,
otherwise returns null. A keyword is any word that, after being stripped of any
TRAILING punctuation, consists only of alphabetic letters, and is not
a noise word. All words are treated in a case-INsensitive manner.

This method indexes all keywords found in all the input documents. When this
method is done, the keywordsIndex hash table will be filled with all keywords,
each of which is associated with an array list of Occurrence objects, arranged
in decreasing frequencies of occurrence.

This method indexes all keywords found in all the input documents. When this
method is done, the keywordsIndex hash table will be filled with all keywords,
each of which is associated with an array list of Occurrence objects, arranged
in decreasing frequencies of occurrence.

This is a hash table of all keywords. The key is the actual keyword, and the associated value is
an array list of all occurrences of the keyword in documents. The array list is maintained in descending
order of occurrence frequencies.

This is a hash table of all keywords. The key is the actual keyword, and the associated value is
an array list of all occurrences of the keyword in documents. The array list is maintained in descending
order of occurrence frequencies.

Inserts the last occurrence in the parameter list in the correct position in the
same list, based on ordering occurrences on descending frequencies. The elements
0..n-2 in the list are already in the correct order. Insertion of the last element
(the one at index n-1) is done by first finding the correct spot using binary search, 
then inserting at that spot.

This method indexes all keywords found in all the input documents. When this
method is done, the keywordsIndex hash table will be filled with all keywords,
each of which is associated with an array list of Occurrence objects, arranged
in decreasing frequencies of occurrence.

This method indexes all keywords found in all the input documents. When this
method is done, the keywordsIndex hash table will be filled with all keywords,
each of which is associated with an array list of Occurrence objects, arranged
in decreasing frequencies of occurrence.

This method indexes all keywords found in all the input documents. When this
method is done, the keywordsIndex hash table will be filled with all keywords,
each of which is associated with an array list of Occurrence objects, arranged
in decreasing frequencies of occurrence.

This method indexes all keywords found in all the input documents. When this
method is done, the keywordsIndex hash table will be filled with all keywords,
each of which is associated with an array list of Occurrence objects, arranged
in decreasing frequencies of occurrence.

This method indexes all keywords found in all the input documents. When this
method is done, the keywordsIndex hash table will be filled with all keywords,
each of which is associated with an array list of Occurrence objects, arranged
in decreasing frequencies of occurrence.
